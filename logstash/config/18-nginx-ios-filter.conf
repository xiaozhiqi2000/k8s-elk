filter {
  if [type] == "ios-statis-log" {
    grok {
      match => {"message"=>"(?<time>\d+(?:\.\d+)?) (?<openudid>(.*?))\|\|(?<udid>(.*?))\|\|(?<idfa>(.*?))\|\|(?<idfv>(.*?))\|\|(?<app_version>(.*?))\|\|(?<os_version>(.*?))\|\|(?<os>(.*?))\|\|(?<clientip>(.*?))\|\|(?<client>(.*?))\|\|(?<device_model>(.*?))\|\|(?<createtime>(.*?))\|\|(?<url_code>(.*?))\|\|(?<pid>(.*?))\|\|(?<channel_name>(.*?))\|\|(?<firstvisit>(.*?))\|\|(?<lastvisit>(.*?))\|\|(?<clicktime>(.*?))\|\|(?<uid>(.*?))\|\|(?<differ_time>(.*))"
      }
    }
    date {
      match=>["createtime","UNIX"]
      target=>"@timestamp"
      timezone=>'Asia/Shanghai'
    }
    geoip {
      source => "clientip"
      fields => ["ip","city_name", "country_code2", "country_name", "region_name","region_code","latitude", "longitude"]
      target => "geoip"
      add_field => ["[geoip][location]", "%{[geoip][longitude]}" ]
      add_field => ["[geoip][location]", "%{[geoip][latitude]}"  ]
    }
    mutate {
        convert => [ "[geoip][location]", "float"]
    }
  }
}

